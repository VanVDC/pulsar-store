{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\vv\\\\Desktop\\\\digitalcraft\\\\pulsar-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyACYiTseI4sGGmOo4hmENrcPGTtUOPj1qM\",\n  authDomain: \"pulsar-fb2aa.firebaseapp.com\",\n  databaseURL: \"https://pulsar-fb2aa.firebaseio.com\",\n  projectId: \"pulsar-fb2aa\",\n  storageBucket: \"pulsar-fb2aa.appspot.com\",\n  messagingSenderId: \"366397027551\",\n  appId: \"1:366397027551:web:db0ddcd5116e44f510a56a\",\n  measurementId: \"G-X5K9M0Z0JY\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, ...otherData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, otherData));\n    } catch (error) {\n      console.log(\"create user profile document: \", error.message);\n    }\n  }\n\n  return userRef;\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);","map":{"version":3,"sources":["C:/users/vv/desktop/digitalcraft/pulsar-store/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","otherData","userRef","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,8BAFS;AAGrBC,EAAAA,WAAW,EAAE,qCAHQ;AAIrBC,EAAAA,SAAS,EAAE,cAJU;AAKrBC,EAAAA,aAAa,EAAE,0BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB,C,CAWA;;AACAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AACA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiB,GAAGC,SAApB,KAAkC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACZC,WADY,GACWR,QADX,CACZQ,WADY;AAAA,UACCC,KADD,GACWT,QADX,CACCS,KADD;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACFT,MAAAA,OAAO,CAACU,GAAR;AACEJ,QAAAA,WADF;AAEEC,QAAAA,KAFF;AAGEC,QAAAA;AAHF,SAIKT,SAJL;AAMD,KAPD,CAOE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,KAAK,CAACG,OAApD;AACD;AACF;;AACD,SAAOd,OAAP;AACD,CArBM;AAuBP,MAAMe,QAAQ,GAAG,IAAI/B,QAAQ,CAACW,IAAT,CAAcqB,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAA7B;AAIA,OAAO,MAAMC,gBAAgB,GAAG,MAAMxB,IAAI,CAACyB,eAAL,CAAqBL,QAArB,CAA/B","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyACYiTseI4sGGmOo4hmENrcPGTtUOPj1qM\",\r\n  authDomain: \"pulsar-fb2aa.firebaseapp.com\",\r\n  databaseURL: \"https://pulsar-fb2aa.firebaseio.com\",\r\n  projectId: \"pulsar-fb2aa\",\r\n  storageBucket: \"pulsar-fb2aa.appspot.com\",\r\n  messagingSenderId: \"366397027551\",\r\n  appId: \"1:366397027551:web:db0ddcd5116e44f510a56a\",\r\n  measurementId: \"G-X5K9M0Z0JY\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const createUserProfileDocument = async (userAuth, ...otherData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...otherData\r\n      });\r\n    } catch (error) {\r\n      console.log(\"create user profile document: \", error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({\r\n  prompt: \"select_account\"\r\n});\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n"]},"metadata":{},"sourceType":"module"}