{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\vv\\\\Desktop\\\\digitalcraft\\\\pulsar-store\\\\src\\\\pages\\\\shop\\\\shop.page.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collection\"); // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //   const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionMap);\n    //   this.setState({ loading: false });\n    // });\n    //Promises style++++++ still using collection reference\n    // collectionRef.get().then(\n    //   snapshot => {\n    //   const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionMap);\n    //   this.setState({ loading: false });\n    // }\n    // )\n    //fetch style api+++++\n\n    fetch(\"https://firestore.googleapis.com/v1/projects/pulsar-fb2aa/databases/(default)/documents/collection\").then(response => response.json()).then(collection => console.log(collection));\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/users/vv/Desktop/digitalcraft/pulsar-store/src/pages/shop/shop.page.jsx"],"names":["React","Route","connect","updateCollections","WithSpinner","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,MAAMC,8BAA8B,GAAGL,WAAW,CAACC,kBAAD,CAAlD;AACA,MAAMK,yBAAyB,GAAGN,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVb,iBADU,GACY,KAAKc,KADjB,CACVd,iBADU;AAGlB,UAAMe,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,YAArB,CAAtB,CAHkB,CAKlB;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACAC,IAAAA,KAAK,CACH,oGADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQF,UAAU,IAAIK,OAAO,CAACC,GAAR,CAAYN,UAAZ,CAJtB;AAKD;;AACDO,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKV,KADhB,CACCU,KADD;AAAA,UAECb,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;AAIP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAEX,KAAK,IACX,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEX,KAAK,IACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AAzDoC;;AA4DvC,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtC3B,EAAAA,iBAAiB,EAAE4B,cAAc,IAC/BD,QAAQ,CAAC3B,iBAAiB,CAAC4B,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkClB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\n\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n\r\n    const collectionRef = firestore.collection(\"collection\");\r\n\r\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n    //   const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   updateCollections(collectionMap);\r\n\r\n    //   this.setState({ loading: false });\r\n    // });\r\n\r\n    //Promises style++++++ still using collection reference\r\n    // collectionRef.get().then(\r\n    //   snapshot => {\r\n    //   const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   updateCollections(collectionMap);\r\n\r\n    //   this.setState({ loading: false });\r\n    // }\r\n    // )\r\n\r\n    //fetch style api+++++\r\n    fetch(\r\n      \"https://firestore.googleapis.com/v1/projects/pulsar-fb2aa/databases/(default)/documents/collection\"\r\n    )\r\n      .then(response => response.json())\r\n      .then(collection => console.log(collection));\r\n  }\r\n  render() {\r\n    const { match } = this.props;\r\n    const { loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={props => (\r\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={props => (\r\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap =>\r\n    dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}