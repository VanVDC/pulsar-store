{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\vv\\\\Desktop\\\\digitalcraft\\\\pulsar-store\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\vv\\\\Desktop\\\\digitalcraft\\\\pulsar-store\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import firebase from\"firebase/app\";import\"firebase/auth\";import\"firebase/firestore\";var firebaseConfig={apiKey:\"AIzaSyACYiTseI4sGGmOo4hmENrcPGTtUOPj1qM\",authDomain:\"pulsar-fb2aa.firebaseapp.com\",databaseURL:\"https://pulsar-fb2aa.firebaseio.com\",projectId:\"pulsar-fb2aa\",storageBucket:\"pulsar-fb2aa.appspot.com\",messagingSenderId:\"366397027551\",appId:\"1:366397027551:web:db0ddcd5116e44f510a56a\",measurementId:\"G-X5K9M0Z0JY\"};// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);//get current user session info\nexport var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();//adding data to the firestore\nexport var addCollectionAndDocuments=function addCollectionAndDocuments(collectionKey,objectToAdd){var collectionRef,batch;return _regeneratorRuntime.async(function addCollectionAndDocuments$(_context){while(1){switch(_context.prev=_context.next){case 0:collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objectToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context.next=5;return _regeneratorRuntime.awrap(batch.commit());case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}});};//collection function for snapshot. Turning arrays to object\nexport var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});//setting the key to our object and turning it into an object data. Data normalization\nreturn transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};export var createUserProfileDocument=function createUserProfileDocument(userAuth,otherData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.async(function createUserProfileDocument$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(userAuth){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context2.next=5;return _regeneratorRuntime.awrap(userRef.get());case 5:snapShot=_context2.sent;if(!snapShot.exists){displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();try{userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},otherData));}catch(error){console.log(\"create user profile document: \",error.message);}}return _context2.abrupt(\"return\",userRef);case 8:case\"end\":return _context2.stop();}}});};export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:\"select_account\"});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};","map":{"version":3,"sources":["C:/Users/vv/Desktop/digitalcraft/pulsar-store/client/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","userAuth","firestore","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","doc","set","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","createUserProfileDocument","otherData","userRef","uid","get","snapShot","exists","displayName","email","createdAt","Date","error","console","log","message","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyACYiTseI4sGGmOo4hmENrcPGTtUOPj1qM\",\r\n  authDomain: \"pulsar-fb2aa.firebaseapp.com\",\r\n  databaseURL: \"https://pulsar-fb2aa.firebaseio.com\",\r\n  projectId: \"pulsar-fb2aa\",\r\n  storageBucket: \"pulsar-fb2aa.appspot.com\",\r\n  messagingSenderId: \"366397027551\",\r\n  appId: \"1:366397027551:web:db0ddcd5116e44f510a56a\",\r\n  measurementId: \"G-X5K9M0Z0JY\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n//get current user session info\r\nexport const getCurrentUser = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n      unsubscribe();\r\n      resolve(userAuth);\r\n    }, reject);\r\n  });\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n//adding data to the firestore\r\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\r\n  const collectionRef = firestore.collection(collectionKey);\r\n\r\n  const batch = firestore.batch();\r\n  objectToAdd.forEach(obj => {\r\n    const newDocRef = collectionRef.doc();\r\n    batch.set(newDocRef, obj);\r\n  });\r\n\r\n  return await batch.commit();\r\n};\r\n\r\n//collection function for snapshot. Turning arrays to object\r\n\r\nexport const convertCollectionsSnapshotToMap = collections => {\r\n  const transformedCollection = collections.docs.map(doc => {\r\n    const { title, items } = doc.data();\r\n\r\n    return {\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items\r\n    };\r\n  });\r\n  //setting the key to our object and turning it into an object data. Data normalization\r\n  return transformedCollection.reduce((accumulator, collection) => {\r\n    accumulator[collection.title.toLowerCase()] = collection;\r\n    return accumulator;\r\n  }, {});\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, otherData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...otherData\r\n      });\r\n    } catch (error) {\r\n      console.log(\"create user profile document: \", error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\"\r\n});\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n"]},"metadata":{},"sourceType":"module"}