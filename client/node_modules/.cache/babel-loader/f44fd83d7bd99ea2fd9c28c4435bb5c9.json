{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\vv\\\\Desktop\\\\digitalcraft\\\\pulsar-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { SignInFailure, SignInSuccess } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(emailSignInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/users/vv/Desktop/digitalcraft/pulsar-store/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","SignInFailure","SignInSuccess","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","googleSignInFailure","message","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AAAA,iBACe,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADrB;AAAA,UACMI,IADN,QACMA,IADN;;AAEF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMd,GAAG,CACPe,mBAAmB;AAAGC,MAAAA,EAAE,EAAEH,YAAY,CAACG;AAApB,OAA2BH,YAAY,CAACI,IAAb,EAA3B,EADZ,CAAT;AAGD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACmB,mBAAmB,CAACD,KAAK,CAACE,OAAP,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AAAA,kBACe,MAAMlB,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMb,IADN,SACMA,IADN;;AAEF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACP0B,kBAAkB;AAAGV,MAAAA,EAAE,EAAEH,YAAY,CAACG;AAApB,OAA2BH,YAAY,CAACI,IAAb,EAA3B,EADX,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAAC2B,kBAAkB,CAACT,KAAK,CAACE,OAAP,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUQ,mBAAV,GAAgC;AACrC,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,oBAAjB,EAAuCpB,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUqB,kBAAV,GAA+B;AACpC,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,mBAAjB,EAAsCV,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUW,SAAV,GAAsB;AAC3B,QAAM/B,GAAG,CAAC,CAACC,IAAI,CAAC0B,mBAAD,CAAL,EAA4B1B,IAAI,CAAC4B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\n\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nimport { SignInFailure, SignInSuccess } from \"./user.actions\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n\r\n    yield put(\r\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n    );\r\n  } catch (error) {\r\n    yield put(googleSignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(\r\n      emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n    );\r\n  } catch (error) {\r\n    yield put(emailSignInFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}